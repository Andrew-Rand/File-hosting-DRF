version: '3.3'


networks:
  main:
    driver: bridge


services:
  app_auth:
    restart: always
    build:
      context: .
      dockerfile: ./srv/app/Dockerfile
    volumes:
      - ./:/usr/src/app
      - ./static/:/static
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - db
    networks:
      - main



  db:
    image: postgres:12.8
    environment:
        POSTGRES_PASSWORD: "${PASSWORD}"
        POSTGRES_USER: "${DB_USER}"
        POSTGRES_DB: "${DB_NAME}"
    volumes:
      - data_ps:/var/lib/postgresql/data_ps/
    ports:
      - 5432:5432
    expose:
      - 5432
    networks:
      - main


  webserver:
    build: ./srv/webserver
    ports:
      - 1337:80
    depends_on:
      - app_auth
      - db
    volumes:
      - ./srv/webserver/nginx.conf:/etc/nginx/nginx.conf
      - ./srv/webserver/conf.d/:/etc/nginx/conf.d
      - ./static/:/static
      - ./storage/:/storage
    networks:
      - main

  broker:
    image: redis:6.2.5
    ports:
      - 6379:6379
    networks:
      - main

#  celery_beat:
#    restart: always
#    build:
#      context: .
#      dockerfile: ./srv/celery/Dockerfile
#    volumes:
#      - ./:/usr/src/app
#    command: "celery -A src.etl beat"
#    networks:
#      - main
#    depends_on:
#      - app_auth
#      - broker
#
#
#  celery_worker:
#    restart: always
#    build:
#      context: .
#      dockerfile: ./srv/celery/Dockerfile
#    volumes:
#      - ./:/usr/src/app
#    command: celery -A src.etl worker -l INFO
#    networks:
#      - main
#    depends_on:
#      - broker


volumes:
  data_ps:
